"use client";
import React from "react";
import { deprecated } from "../utils";
import { SWRConfig } from "./clerk-swr";
import { createContextAndHook } from "./createContextAndHook";
const [ClerkInstanceContext, useClerkInstanceContext] = createContextAndHook("ClerkInstanceContext");
const [UserContext, useUserContext] = createContextAndHook("UserContext");
const [ClientContext, useClientContext] = createContextAndHook("ClientContext");
const [SessionContext, useSessionContext] = createContextAndHook(
  "SessionContext"
);
const [OrganizationContextInternal, useOrganizationContext] = createContextAndHook("OrganizationContext");
const OrganizationProvider = ({
  children,
  organization,
  lastOrganizationMember,
  lastOrganizationInvitation,
  swrConfig
}) => {
  return /* @__PURE__ */ React.createElement(SWRConfig, { value: swrConfig }, /* @__PURE__ */ React.createElement(
    OrganizationContextInternal.Provider,
    {
      value: {
        value: {
          organization,
          lastOrganizationMember,
          lastOrganizationInvitation
        }
      }
    },
    children
  ));
};
const OrganizationContext = (...args) => {
  deprecated("OrganizationContext", "Use `OrganizationProvider` instead");
  return OrganizationProvider(...args);
};
export {
  ClerkInstanceContext,
  ClientContext,
  OrganizationContext,
  OrganizationProvider,
  SessionContext,
  UserContext,
  useClerkInstanceContext,
  useClientContext,
  useOrganizationContext,
  useSessionContext,
  useUserContext
};
//# sourceMappingURL=contexts.js.map